name: Deploy Binance Trading Bot (C# + Grok + Binance API)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '8.0.x'
  FUNCTION_APP_NAME: 'binance1'
  RESOURCE_GROUP: 'binance1_group'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore Packages
        run: |
          cd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet restore binazure.csproj

      - name: Publish Function (In-Process C#)
        run: |
          cd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet publish binazure.csproj \
            --configuration Release \
            --output ./output \
            --no-restore

      - name: Copy host.json to Output Root
        run: |
          cd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          cp host.json ./output/

      - name: Create Deploy ZIP (Root-Level Structure)
        run: |
          cd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          zip -r ../deploy.zip .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Function App
        run: |
          cd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          az functionapp deployment source config-zip \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.FUNCTION_APP_NAME }} \
            --src deploy.zip \
            --build-remote false